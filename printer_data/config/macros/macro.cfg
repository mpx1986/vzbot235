[include startend.cfg]
[include m204.cfg]
[include m205.cfg]
[include speed.cfg]

[gcode_macro Flash_Klipper]
gcode:
    {% set temp = printer.extruder.temperature %}
    { action_respond_info("%s" % (temp)) }
    RUN_SHELL_COMMAND CMD=flash
    
[gcode_shell_command flash]
command: sh //home/pi/printer_data/config/flash.sh
timeout: 30.
verbose: True


# Replacement-Macro to control the Fan with M106 P2 and M107 for BambuStudio
# Macro inspired by klipper-github issue https://github.com/Klipper3d/klipper/issues/2174


[gcode_macro M106]
gcode:
    {% set fan = 'fan' + (params.P|int if params.P is defined else 0)|string %}
    {% set speed = (params.S|float / 255 if params.S is defined else 1.0) %}
    SET_FAN_SPEED FAN={fan} SPEED={speed}



[pause_resume]

[display_status]

[gcode_macro M900]
gcode:
  {% if 'K' in params %}
    {% if 'E' in params %}
      SET_PRESSURE_ADVANCE EXTRUDER={params.E} ADVANCE={params.K}
    {% else %}
      SET_PRESSURE_ADVANCE ADVANCE={params.K}
    {% endif %}
  {% endif %}

[gcode_macro ALL_OFF]
gcode:
    TURN_OFF_HEATERS
    SET_TEMPERATURE_FAN_TARGET temperature_fan=enclosure_fan target=0
        
[gcode_macro enable_stepper]
gcode:
 SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
 SET_STEPPER_ENABLE STEPPER=stepper_x1 ENABLE=1
 SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
 SET_STEPPER_ENABLE STEPPER=stepper_y1 ENABLE=1

[gcode_macro TURN_OFF_MOTORS]
gcode:
    M84

################################
# Power Off
################################
[gcode_macro _POWER_OFF_PRINTER]
gcode:
  {action_call_remote_method("set_device_power",
                             device="VZBot235",
                             state="off")}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode:
  {% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
    {% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
        {% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
            UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
            _POWER_OFF_PRINTER
        {% else %}
            UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
        {% endif %}
    {% else %}
        {% if printer.idle_timeout.state == "Printing" %}
            UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
        {% else %}
            {% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
                UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
            {% else %}
                UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
            {% endif %}
        {% endif %}
    {% endif %}
  {% endif %}

[gcode_macro ACTIVATE_POWER_OFF]
gcode:
    UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK_ACT DURATION=60

[gcode_macro DEACTIVATE_POWER_OFF]
gcode:
    UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK_ACT DURATION=0

[delayed_gcode POWER_OFF_PRINTER_CHECK_ACT]
gcode:
  {% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
    UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30
  {% else %}
    UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK_ACT DURATION=60
  {% endif %}


################################
############# M201 #############
################################
[gcode_macro m201]
description: Sets maximum accelleration.
  Usage: M201 [X<accel>] [Y<accel>]
variable_max_accel: 1.7976931348623157e+308
gcode:
  {% set km = printer["gcode_macro _km_globals"] %}
  {% if 'X' in params or 'Y' in params %}
    {% set accel = (params.X|default(params.Y)|float,
                    params.Y|default(params.X)|float)|min %}
    SET_GCODE_VARIABLE MACRO=m201 VARIABLE=max_accel VALUE="{accel}"
  {% else %}
    SET_VELOCITY_LIMIT
  {% endif %}

################################
############# M203 #############
################################
[gcode_macro m203]
description: Sets maximum velocity.
  Usage: M203 [X<velocity>] [Y<velocity>]
gcode:
  {% if 'X' in params or 'Y' in params %}
    {% set velocity = (params.X|default(params.Y)|float,
                       params.Y|default(params.X)|float)|min %}
    SET_VELOCITY_LIMIT VELOCITY="{velocity}"
  {% else %}
    SET_VELOCITY_LIMIT
  {% endif %}

#####################################
#          PID Tune Macros          #
#       Version 1.0  2023-1-30      #
#####################################

################################
######### PID_EXTRUDER #########
################################
[gcode_macro PID_EXTRUDER]
description: PID Tune for the Extruder
gcode:
  {% set e = printer.toolhead.extruder %}
  {% set T = params.TEMPERATURE|default(230)|float %}
  {% set S = params.FAN_IN_PERCENT|default(0)|float *2.55 %}
  {% set P = printer.configfile.config[e].pid_kp|float %}
  {% set I = printer.configfile.config[e].pid_ki|float %}
  {% set D = printer.configfile.config[e].pid_kd|float %}
  M106 S{S}
  M118 // PID parameters: pid_Kp={P} pid_Ki={I} pid_Kd={D}  (old)
  PID_CALIBRATE HEATER={e} TARGET={T}
  TURN_OFF_HEATERS
  SAVE_CONFIG
 
################################
############ PID_BED ###########
################################
[gcode_macro PID_BED]
description: PID Tune for the Bed
gcode:
  {% set T = params.TEMPERATURE|default(80)|float %}
  {% set P = printer.configfile.config['heater_bed'].pid_kp|float %}
  {% set I = printer.configfile.config['heater_bed'].pid_ki|float %}
  {% set D = printer.configfile.config['heater_bed'].pid_kd|float %}
  M118 // PID parameters: pid_Kp={P} pid_Ki={I} pid_Kd={D}  (old)
  PID_CALIBRATE HEATER=heater_bed TARGET={T}
  TURN_OFF_HEATERS
  SAVE_CONFIG


[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance:  100
variable_purge_distance:  50
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=unload_state
    G91
    G92 E0
    G1 E{purge_distance} F{speed} # purge
    G1 E-{unload_distance} F{max_velocity} # fast-unload
    RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
variable_load_distance:  100
variable_purge_distance:  50
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=load_state
    G91
    G92 E0
    G1 E{load_distance} F{max_velocity} # fast-load
    G1 E{purge_distance} F{speed} # purge
    RESTORE_GCODE_STATE NAME=load_state


 [gcode_macro CALIBRATE_BACKLASH]
description: Calibrate backlash at each corner
gcode:
    {% set z_height = 20 %}
    {% set x_max = printer.configfile.config['stepper_x']['position_max']|float %}
    {% set y_max = printer.configfile.config['stepper_y']['position_max']|float %}
    {% set x_min = 20 %}                # change the value if needed
    {% set y_min = 20 %}                # change the value if needed
    {% set x_safe_max = x_max - 20 %}   # change the value if needed
    {% set y_safe_max = y_max - 50 %}   # change the value if needed
    
    {% if printer.toolhead.homed_axes != "xyz" %}
    # Home the printer if not already homed
    G28
    {% endif %}

    {% if printer.configfile.settings.quad_gantry_level %}
        {% if printer.quad_gantry_level.applied == False %}
            # Perform Quad Gantry Level if needed
            QUAD_GANTRY_LEVEL
            G28 Z
        {% endif %}
    {% endif %}

    # Move to the front left corner
    G1 X{x_min} Y{y_min} Z{z_height} F15000
    CARTOGRAPHER_ESTIMATE_BACKLASH

    # Move to the front right corner
    G1 X{x_safe_max} Y{y_min} Z{z_height} F15000
    CARTOGRAPHER_ESTIMATE_BACKLASH

    # Move to the back right corner
    G1 X{x_safe_max} Y{y_safe_max} Z{z_height} F15000
    CARTOGRAPHER_ESTIMATE_BACKLASH

    # Move to the back left corner
    G1 X{x_min} Y{y_safe_max} Z{z_height} F15000
    CARTOGRAPHER_ESTIMATE_BACKLASH

    # Return to the center of the bed
    G1 X{x_max / 2} Y{y_max / 2} Z{z_height} F15000
    

[gcode_macro PROBE_CALIBRATE]
gcode:
    CARTOGRAPHER_CALIBRATE

