########################
########################
# FANS
########################

[heater_fan hotend_fan] 
pin: EBBCan: PA0
heater: extruder
heater_temp: 50.0

[controller_fan Octopus]  #FAN 5
stepper: stepper_x,stepper_y,stepper_z
pin: PA1
tachometer_pin: PC3
#cycle_time: 0.00001
shutdown_speed: 0
idle_timeout: 180

#[controller_fan PSU]
#stepper: stepper_x, stepper_y, stepper_z
#pin: PE5
#max_power: 1
#shutdown_speed: 0
#kick_start_time: 0.1
#off_below: 0.10
#idle_timeout: 120

########################
########################
# CPAP
########################

[fan]

pin: PA3
max_power: 0.8 
# Anything above 80% duty cycle will be full power on this particular brushless driver.
# If this value is less than 1.0, then fan speed requests will be scaled between zero and max_power (for example, if max_power is 0.9 and a fan speed of 80% is requested, then the fan power will be set to 72%).
shutdown_speed: 0 
# The desired fan speed (expressed as a value from 0.0 to 1.0) if 
# The microcontroller software enters an error state. 
# The default is 0.
cycle_time: 0.005 
# The amount of time (in seconds) for each PWM power cycle to the fan. 
# It is recommended this be 10 milliseconds or greater when using software-based PWM. 
# The default is 0.010 seconds.
hardware_pwm: False 
# Enable this to use hardware PWM instead of software PWM. 
# Most fans do not work well with hardware PWM, so it is not recommended to enable this unless there is an electrical requirement to switch at very high speeds. 
# When using hardware PWM, the actual cycle time is constrained by the implementation and may be significantly different than the requested cycle_time. 
# The default is False.
kick_start_time: 0.100 
# Time (in seconds) to run the fan at full speed when either first enabling or increasing it by more than 50% (helps get the fan spinning). 
# The default is 0.100 seconds.
off_below: 0.1 
# The blower will not spin with the included brushless driver when the duty cycle is below 8%. When scaled with Max_power at 0.8, the off_below parameter should be set to 0.1. 
# To calibrate this setting, gradually lower the fan speed to determine the lowest input speed that reliably drives the fan without stalls. 
# Set off_below to the duty cycle corresponding to this value (for example, 8% -> 0.08/Max_power -> 0.08/0.8 -> 0.1) or slightly higher. 
# This parameter is the minimum input speed that will power the fan (expressed as a value from 0.0 to 1.0). 
# When a speed lower than off_below is requested, the fan will instead be turned off. 
# This setting may be used to prevent fan stalls and to ensure effective kick starts. 
# To calibrate this setting, start with off_below set to 0.0 and the fan spinning. 
# Gradually lower the fan speed to determine the lowest input speed that reliably drives the fan without stalls. 
# Set off_below to the duty cycle corresponding to this value (for example, 12% -> 0.12) or slightly higher.
#Tachometer_pin:
# Tachometer input pin for monitoring fan speed. A pullup is generally required. 
# This parameter is optional.
#Tachometer_ppr: 1
# When tachometer_pin is specified, this is the number of pulses per revolution of the tachometer signal.
#Tachometer_poll_interval: 0.0005
# When tachometer_pin is specified, this is the polling period of the tachometer pin, in seconds. 
# The default is 0.0015, which is fast enough for fans below 10,000 RPM at 2 PPR. 
# This must be smaller than 30/(tachometer_ppr*rpm), with some margin, where rpm is the 
# maximum speed (in RPM) of the fan.


########################
########################
# AUX Fans
########################

# this is the auxiliary fan
[multi_pin aux_fans_pin] #FAN 5 6
pins: PA6, PA5

# this is the auxiliary fan
[fan_generic RSCS]
pin: multi_pin:aux_fans_pin
#max_power: 1.0
cycle_time: 0.1  #0.0001
hardware_pwm: false
kick_start_time: 0.2
off_below: 0.05

##  Chamber temp / Exhaust fan (12V Fan 3 wire)

#[temperature_fan Exhaust_fan] # FAN 4
#pin: PA1
#tachometer_pin: PC3
#max_power: 1.0
#shutdown_speed: 0.1
#cycle_time: 0.0005     #2 kHz PWM signal
#hardware_pwm: true
#kick_start_time: 5.0
#sensor_type: ATC Semitec 104GT-2
#sensor_pin: PB0
#min_temp: 0
#max_temp: 70
#target_temp: 50
#control: watermark
#gcode_id: C

#Macro inspired by klipper-github issue https://github.com/Klipper3d/klipper/issues/2174
[gcode_macro M106]
rename_existing: G106
gcode:
    {% set P = params.P | default(0) | int %}
    {% set S = params.S | default(255) | int %}
    {% if P == 0 %}
        G106 S{S}
    {% else %}
        {% set fan = "RSCS" if P == 2 else "Exhaust_fan" %}
        SET_FAN_SPEED FAN={fan} SPEED={S / 255}
    {% endif %}

[gcode_macro M107]
rename_existing: G107
gcode:
    {% set fan = params.P|default(1)|int %}
	{% if fan == 2 %}
		SET_FAN_SPEED FAN=RSCS SPEED=0
	{% elif fan == 3 %}
		SET_FAN_SPEED FAN=Exhaust_fan SPEED=0   
	{% else %}
	  SET_FAN_SPEED FAN=RSCS SPEED=0  
	  SET_FAN_SPEED FAN=Exhaust_fan SPEED=0  
	  G107
	{% endif %}


########################
########################
# Watercooling
########################
[heater_fan pump]
pin: PF8      #FAN5
tachometer_pin: PC1
fan_speed: 1.0
cycle_time: 0.01
heater: extruder

[heater_fan fan_radiator]
pin: PA2     #FAN6
tachometer_pin: PC2
fan_speed: 1.0
cycle_time: 0.01
heater: extruder
heater_temp: 20

[thermistor watercooling]
temperature1: 25
resistance1: 10000
temperature2: 50
resistance2: 4157
temperature3: 100
resistance3: 971

[temperature_sensor Watercooling]
sensor_type: watercooling
sensor_pin: PC5
min_temp: 10
max_temp: 100
